name: Build App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image (includes lint, typecheck, test, build)
        run: |
          echo "Building Docker image with all quality checks for commit ${{ github.sha }}"
          docker build -t fit-tracker:${{ github.sha }} .
        
      - name: Extract build artifacts from Docker image
        run: |
          echo "Extracting build artifacts from Docker image"
          docker create --name temp-${{ github.sha }} fit-tracker:${{ github.sha }}
          mkdir -p apps/web/dist apps/server/dist apps/server/src/db
          docker cp temp-${{ github.sha }}:/app/apps/web/dist ./apps/web/
          docker cp temp-${{ github.sha }}:/app/apps/server/dist ./apps/server/
          docker cp temp-${{ github.sha }}:/app/apps/server/drizzle.config.ts ./apps/server/ 2>/dev/null || true
          docker cp temp-${{ github.sha }}:/app/apps/server/src/env.ts ./apps/server/src/ 2>/dev/null || true
          docker cp temp-${{ github.sha }}:/app/apps/server/src/db/migrations ./apps/server/src/db/ 2>/dev/null || true
          docker cp temp-${{ github.sha }}:/app/package.json ./
          docker cp temp-${{ github.sha }}:/app/pnpm-lock.yaml ./
          docker cp temp-${{ github.sha }}:/app/pnpm-workspace.yaml ./
          docker rm temp-${{ github.sha }}
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: |
            apps/web/dist/
            apps/server/dist/
            apps/server/drizzle.config.ts
            apps/server/src/env.ts
            apps/server/src/db/migrations/
            package.json
            pnpm-lock.yaml
            pnpm-workspace.yaml
          retention-days: 30
          
      - name: Save Docker image as artifact
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        run: |
          echo "Saving Docker image as artifact"
          docker save fit-tracker:${{ github.sha }} | gzip > fit-tracker-${{ github.sha }}.tar.gz
          
      - name: Upload Docker image artifact
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ github.sha }}
          path: fit-tracker-${{ github.sha }}.tar.gz
          retention-days: 14