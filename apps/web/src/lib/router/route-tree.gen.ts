/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as R404RouteImport } from './routes/404'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as AuthenticatedWorkoutsIndexRouteImport } from './routes/_authenticated/workouts.index'
import { Route as PublicAuthSignInRouteImport } from './routes/_public/auth.sign-in'
import { Route as PublicAuthRegisterRouteImport } from './routes/_public/auth.register'
import { Route as AuthenticatedWorkoutsCreateRouteImport } from './routes/_authenticated/workouts.create'
import { Route as AuthenticatedWorkoutsWorkoutIdIndexRouteImport } from './routes/_authenticated/workouts.$workoutId.index'
import { Route as AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRouteImport } from './routes/_authenticated/workouts.$workoutId.we.$workoutExerciseId.sets.index'
import { Route as AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRouteImport } from './routes/_authenticated/workouts.$workoutId.we.$workoutExerciseId.add-exercises.index'
import { Route as AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRouteImport } from './routes/_authenticated/workouts.$workoutId.we.$workoutExerciseId.sets.$setId.index'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)
const AuthenticatedWorkoutsIndexRoute =
  AuthenticatedWorkoutsIndexRouteImport.update({
    id: '/workouts/',
    path: '/workouts/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const PublicAuthSignInRoute = PublicAuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => PublicRoute,
} as any)
const PublicAuthRegisterRoute = PublicAuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => PublicRoute,
} as any)
const AuthenticatedWorkoutsCreateRoute =
  AuthenticatedWorkoutsCreateRouteImport.update({
    id: '/workouts/create',
    path: '/workouts/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedWorkoutsWorkoutIdIndexRoute =
  AuthenticatedWorkoutsWorkoutIdIndexRouteImport.update({
    id: '/workouts/$workoutId/',
    path: '/workouts/$workoutId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute =
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRouteImport.update({
    id: '/workouts/$workoutId/we/$workoutExerciseId/sets/',
    path: '/workouts/$workoutId/we/$workoutExerciseId/sets/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute =
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRouteImport.update(
    {
      id: '/workouts/$workoutId/we/$workoutExerciseId/add-exercises/',
      path: '/workouts/$workoutId/we/$workoutExerciseId/add-exercises/',
      getParentRoute: () => AuthenticatedRoute,
    } as any,
  )
const AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute =
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRouteImport.update(
    {
      id: '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/',
      path: '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/',
      getParentRoute: () => AuthenticatedRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/404': typeof R404Route
  '/': typeof PublicIndexRoute
  '/workouts/create': typeof AuthenticatedWorkoutsCreateRoute
  '/auth/register': typeof PublicAuthRegisterRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/workouts': typeof AuthenticatedWorkoutsIndexRoute
  '/workouts/$workoutId': typeof AuthenticatedWorkoutsWorkoutIdIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/add-exercises': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/sets': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute
}
export interface FileRoutesByTo {
  '/404': typeof R404Route
  '/': typeof PublicIndexRoute
  '/workouts/create': typeof AuthenticatedWorkoutsCreateRoute
  '/auth/register': typeof PublicAuthRegisterRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/workouts': typeof AuthenticatedWorkoutsIndexRoute
  '/workouts/$workoutId': typeof AuthenticatedWorkoutsWorkoutIdIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/add-exercises': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/sets': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute
  '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/404': typeof R404Route
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_public/': typeof PublicIndexRoute
  '/_authenticated/workouts/create': typeof AuthenticatedWorkoutsCreateRoute
  '/_public/auth/register': typeof PublicAuthRegisterRoute
  '/_public/auth/sign-in': typeof PublicAuthSignInRoute
  '/_authenticated/workouts/': typeof AuthenticatedWorkoutsIndexRoute
  '/_authenticated/workouts/$workoutId/': typeof AuthenticatedWorkoutsWorkoutIdIndexRoute
  '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/add-exercises/': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute
  '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute
  '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/': typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/404'
    | '/'
    | '/workouts/create'
    | '/auth/register'
    | '/auth/sign-in'
    | '/workouts'
    | '/workouts/$workoutId'
    | '/workouts/$workoutId/we/$workoutExerciseId/add-exercises'
    | '/workouts/$workoutId/we/$workoutExerciseId/sets'
    | '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/404'
    | '/'
    | '/workouts/create'
    | '/auth/register'
    | '/auth/sign-in'
    | '/workouts'
    | '/workouts/$workoutId'
    | '/workouts/$workoutId/we/$workoutExerciseId/add-exercises'
    | '/workouts/$workoutId/we/$workoutExerciseId/sets'
    | '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId'
  id:
    | '__root__'
    | '/404'
    | '/_authenticated'
    | '/_public'
    | '/_public/'
    | '/_authenticated/workouts/create'
    | '/_public/auth/register'
    | '/_public/auth/sign-in'
    | '/_authenticated/workouts/'
    | '/_authenticated/workouts/$workoutId/'
    | '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/add-exercises/'
    | '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/'
    | '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  R404Route: typeof R404Route
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_authenticated/workouts/': {
      id: '/_authenticated/workouts/'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof AuthenticatedWorkoutsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_public/auth/sign-in': {
      id: '/_public/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof PublicAuthSignInRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/auth/register': {
      id: '/_public/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof PublicAuthRegisterRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_authenticated/workouts/create': {
      id: '/_authenticated/workouts/create'
      path: '/workouts/create'
      fullPath: '/workouts/create'
      preLoaderRoute: typeof AuthenticatedWorkoutsCreateRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/workouts/$workoutId/': {
      id: '/_authenticated/workouts/$workoutId/'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof AuthenticatedWorkoutsWorkoutIdIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/': {
      id: '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/'
      path: '/workouts/$workoutId/we/$workoutExerciseId/sets'
      fullPath: '/workouts/$workoutId/we/$workoutExerciseId/sets'
      preLoaderRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/add-exercises/': {
      id: '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/add-exercises/'
      path: '/workouts/$workoutId/we/$workoutExerciseId/add-exercises'
      fullPath: '/workouts/$workoutId/we/$workoutExerciseId/add-exercises'
      preLoaderRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/': {
      id: '/_authenticated/workouts/$workoutId/we/$workoutExerciseId/sets/$setId/'
      path: '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId'
      fullPath: '/workouts/$workoutId/we/$workoutExerciseId/sets/$setId'
      preLoaderRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedWorkoutsCreateRoute: typeof AuthenticatedWorkoutsCreateRoute
  AuthenticatedWorkoutsIndexRoute: typeof AuthenticatedWorkoutsIndexRoute
  AuthenticatedWorkoutsWorkoutIdIndexRoute: typeof AuthenticatedWorkoutsWorkoutIdIndexRoute
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute: typeof AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedWorkoutsCreateRoute: AuthenticatedWorkoutsCreateRoute,
  AuthenticatedWorkoutsIndexRoute: AuthenticatedWorkoutsIndexRoute,
  AuthenticatedWorkoutsWorkoutIdIndexRoute:
    AuthenticatedWorkoutsWorkoutIdIndexRoute,
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute:
    AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdAddExercisesIndexRoute,
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute:
    AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsIndexRoute,
  AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute:
    AuthenticatedWorkoutsWorkoutIdWeWorkoutExerciseIdSetsSetIdIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface PublicRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
  PublicAuthRegisterRoute: typeof PublicAuthRegisterRoute
  PublicAuthSignInRoute: typeof PublicAuthSignInRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
  PublicAuthRegisterRoute: PublicAuthRegisterRoute,
  PublicAuthSignInRoute: PublicAuthSignInRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
